name: .NET Core Build / Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug] #Release

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: Sonatype-SCA                         # Replace with your solution name, i.e. MyWpfApp.sln.
      SBOM_Path: SonatypeSCA
      
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 3.1.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
        
    - name: Create CycloneDX SBOM (transitive mapping)
      run: |
         dotnet tool install --global CycloneDX
         dotnet restore
         echo $env:SBOM_Path
         dotnet CycloneDX SonatypeSCA\SonatypeSCA.csproj -o SonatypeSCA\

    - name: Download and Scan with Sonatype Lifecycle CLI
      run: |
         echo Sonatype-CLI.jar - https://download.sonatype.com/clm/scanner/latest.jar 
         curl --location ${{ env.SonatypeCLIUrl }} > Sonatype.zip
         tar -xf Sonatype.zip
         rm Sonatype.zip
         .\nexus-iq-cli.exe -s https://iq.aplattel.ngrok.io/ -a admin:admin!23 -t build -i NET-SCA .


    - name: Download and Run Sonatype IQ
      run: |
         echo Sonatype-CLI.jar - https://download.sonatype.com/clm/scanner/latest.jar 
         curl --location 'https://download.sonatype.com/clm/scanner/latest.jar' > Sonatype-CLI.jar
         dir
         java -jar Sonatype-CLI.jar -s https://iq.aplattel.ngrok.io/ -a admin:admin!23 -t release -i NET-SCA -r sonatype-results.json .    
